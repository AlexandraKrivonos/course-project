{"ast":null,"code":"var _jsxFileName = \"D:\\\\course\\\\client\\\\src\\\\pages\\\\ProfilePage\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useCallback, useEffect } from 'react';\nimport { useHttp } from '../../hooks/http.hook';\nimport Loader from '../../components/Loader';\nimport FanficCard from '../../components/FanficCard';\nimport styles from './styles.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfilePage = () => {\n  _s();\n\n  const {\n    AuthContext\n  } = require('../../context/AuthContext');\n\n  const {\n    token\n  } = useContext(AuthContext);\n  debugger;\n  const [fanfics, setFanfics] = useState([]);\n  const {\n    loading,\n    request\n  } = useHttp();\n  debugger;\n  const fetchFanfics = useCallback(async () => {\n    try {\n      const fetched = await request('api/fanfic', 'GET', null, {\n        Authorization: `Bearer ${token}`\n      });\n      setFanfics(fetched);\n    } catch (e) {}\n  }, [token, request]);\n  useEffect(() => {\n    fetchFanfics();\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: /*#__PURE__*/_jsxDEV(FanficCard, {\n      fanfics: fanfics\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProfilePage, \"DhR9IYAfRI4E5ghdXlD9OCRsKOg=\", false, function () {\n  return [useHttp];\n});\n\n_c = ProfilePage;\nexport default ProfilePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"sources":["D:/course/client/src/pages/ProfilePage/index.js"],"names":["React","useState","useContext","useCallback","useEffect","useHttp","Loader","FanficCard","styles","ProfilePage","AuthContext","require","token","fanfics","setFanfics","loading","request","fetchFanfics","fetched","Authorization","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,WAArC,EAAkDC,SAAlD,QAAkE,OAAlE;AACA,SAASC,OAAT,QAAwB,uBAAxB;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEC,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACvB,QAAM;AAACC,IAAAA;AAAD,MAAgBC,OAAO,CAAC,2BAAD,CAA7B;;AAEA,QAAM;AAACC,IAAAA;AAAD,MAAUV,UAAU,CAACQ,WAAD,CAA1B;AACA;AACC,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAACc,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAqBX,OAAO,EAAlC;AAEA;AAEA,QAAMY,YAAY,GAAGd,WAAW,CAAC,YAAY;AACzC,QAAI;AACA,YAAMe,OAAO,GAAG,MAAMF,OAAO,CAAC,YAAD,EAAe,KAAf,EAAsB,IAAtB,EAA4B;AACtDG,QAAAA,aAAa,EAAG,UAASP,KAAM;AADuB,OAA5B,CAA7B;AAIAE,MAAAA,UAAU,CAACI,OAAD,CAAV;AACH,KAND,CAME,OAAOE,CAAP,EAAU,CAEX;AAEJ,GAX+B,EAW7B,CAACR,KAAD,EAAQI,OAAR,CAX6B,CAAhC;AAaAZ,EAAAA,SAAS,CAAC,MAAM;AAEba,IAAAA,YAAY;AAEf,GAJS,EAIP,EAJO,CAAT;;AAMD,MAAIF,OAAJ,EAAa;AACT,wBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AAEH;;AAGD,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,2BAEM,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEF;AAArB;AAAA;AAAA;AAAA;AAAA;AAFN;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA1CA;;GAAMJ,W;UAMyBJ,O;;;KANzBI,W;AA4CP,eAAeA,WAAf","sourcesContent":["import React, {useState, useContext, useCallback, useEffect} from 'react'\r\nimport { useHttp } from '../../hooks/http.hook'\r\n\r\nimport Loader from '../../components/Loader'\r\nimport FanficCard from '../../components/FanficCard'\r\nimport styles from './styles.module.css'\r\n\r\n const ProfilePage = () => {\r\n    const {AuthContext} = require('../../context/AuthContext')\r\n\r\n    const {token} = useContext(AuthContext)\r\n    debugger\r\n     const [fanfics, setFanfics] = useState([])\r\n     const {loading, request} = useHttp()\r\n     \r\n     debugger\r\n\r\n     const fetchFanfics = useCallback(async () => {\r\n         try {\r\n             const fetched = await request('api/fanfic', 'GET', null, {\r\n                Authorization: `Bearer ${token}`\r\n             }) \r\n         \r\n             setFanfics(fetched)\r\n         } catch (e) {\r\n             \r\n         }\r\n\r\n     }, [token, request])\r\n\r\n     useEffect(() => {\r\n        \r\n        fetchFanfics()\r\n        \r\n    }, [])\r\n\r\n    if (loading) {\r\n        return <Loader />\r\n\r\n    }\r\n\r\n   \r\n    return (\r\n        <div className=\"wrapper\">\r\n            \r\n            { <FanficCard fanfics={fanfics} />}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfilePage"]},"metadata":{},"sourceType":"module"}