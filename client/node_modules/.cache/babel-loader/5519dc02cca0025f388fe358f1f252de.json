{"ast":null,"code":"import _regeneratorRuntime from\"D:/course/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/course/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:/course/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useCallback}from'react';export var useHttp=function useHttp(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var request=useCallback(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(url){var method,body,headers,response,data,_args=arguments;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:method=_args.length>1&&_args[1]!==undefined?_args[1]:'GET';body=_args.length>2&&_args[2]!==undefined?_args[2]:null;headers=_args.length>3&&_args[3]!==undefined?_args[3]:{};setLoading(true);_context.prev=4;if(body){body=JSON.stringify(body);headers['Content-Type']='application/json';}_context.next=8;return fetch(url,{method:method,body:body,headers:headers});case 8:response=_context.sent;_context.next=11;return response.json();case 11:data=_context.sent;if(response.ok){_context.next=14;break;}throw new Error(data.message||'Something went wrong');case 14:setLoading(false);return _context.abrupt(\"return\",data);case 18:_context.prev=18;_context.t0=_context[\"catch\"](4);setLoading(false);setError(_context.t0.message);throw _context.t0;case 23:case\"end\":return _context.stop();}}},_callee,null,[[4,18]]);}));return function(_x){return _ref.apply(this,arguments);};}(),[]);var clearError=function clearError(){return setError(null);};return{loading:loading,request:request,error:error,clearError:clearError};};","map":{"version":3,"sources":["D:/course/client/src/hooks/http.hook.js"],"names":["useState","useCallback","useHttp","loading","setLoading","error","setError","request","url","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError"],"mappings":"kZAAA,OAAQA,QAAR,CAAkBC,WAAlB,KAAoC,OAApC,CAEA,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,eACKF,QAAQ,CAAE,KAAF,CADb,wCAClBG,OADkB,eACTC,UADS,8BAECJ,QAAQ,CAAE,IAAF,CAFT,yCAElBK,KAFkB,eAEXC,QAFW,eAGzB,GAAMC,CAAAA,OAAO,CAAGN,WAAW,0FAAC,iBAAOO,GAAP,wKAAYC,MAAZ,+CAAqB,KAArB,CAA4BC,IAA5B,+CAAmC,IAAnC,CAAyCC,OAAzC,+CAAmD,EAAnD,CACxBP,UAAU,CAAC,IAAD,CAAV,CADwB,gBAGpB,GAAGM,IAAH,CAAS,CACLA,IAAI,CAAGE,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAP,CACAC,OAAO,CAAC,cAAD,CAAP,CAA0B,kBAA1B,CAEH,CAPmB,sBASAG,CAAAA,KAAK,CAAEN,GAAF,CAAO,CAACC,MAAM,CAANA,MAAD,CAASC,IAAI,CAAJA,IAAT,CAAeC,OAAO,CAAPA,OAAf,CAAP,CATL,QASjBI,QATiB,sCAUJA,CAAAA,QAAQ,CAACC,IAAT,EAVI,SAUjBC,IAViB,kBAYnBF,QAAQ,CAACG,EAZU,+BAab,IAAIC,CAAAA,KAAJ,CAAWF,IAAI,CAACG,OAAL,EAAgB,sBAA3B,CAba,SAgBxBhB,UAAU,CAAC,KAAD,CAAV,CAhBwB,gCAkBjBa,IAlBiB,4DAqBpBb,UAAU,CAAC,KAAD,CAAV,CACAE,QAAQ,CAAC,YAAMc,OAAP,CAAR,CAtBoB,uFAAD,+DA0BxB,EA1BwB,CAA3B,CA4BA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,SAAMf,CAAAA,QAAQ,CAAC,IAAD,CAAd,EAAnB,CAEA,MAAO,CAACH,OAAO,CAAPA,OAAD,CAAUI,OAAO,CAAPA,OAAV,CAAmBF,KAAK,CAALA,KAAnB,CAA0BgB,UAAU,CAAVA,UAA1B,CAAP,CACH,CAlCM","sourcesContent":["import {useState, useCallback} from 'react' \r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState (false)\r\n    const [error, setError] = useState (null)\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n        setLoading(true)\r\n        try {\r\n            if(body) {\r\n                body = JSON.stringify(body)\r\n                headers['Content-Type'] = 'application/json'\r\n\r\n            }\r\n\r\n         const response = await fetch( url, {method, body, headers})\r\n         const data = await response.json()\r\n\r\n        if (!response.ok) {\r\n             throw new Error (data.message || 'Something went wrong')\r\n        }\r\n\r\n        setLoading(false)\r\n\r\n        return data\r\n\r\n        } catch (error) {\r\n            setLoading(false)\r\n            setError(error.message)\r\n            throw error \r\n        }\r\n\r\n    }, [])\r\n\r\n    const clearError = () => setError(null)\r\n\r\n    return {loading, request, error, clearError}\r\n}"]},"metadata":{},"sourceType":"module"}